{"version":3,"sources":["assets/pretva-logo.png","components/Navbar.jsx","apis/fetchProducts.js","components/Search.jsx","components/Products.jsx","components/Footer.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","logo","alt","axios","require","fetchProducts","filters","a","buyerName","String","leadTime","price","productName","quantity","weightGsm","post","priceRs","result","console","log","Search","props","useState","productNameList","setProductNameList","leadTimeList","setLeadTimeList","weightGsmList","setWeightGsmList","quantityList","setQuantityList","priceList","setPriceList","selectedFiltersList","setSelectedFiltersList","handleFindBuyer","updateLists","setFetchedProducts","data","handleApplyFilter","handleReset","setProductName","undefined","setLeadTime","setWeightGsm","setQuantity","setPrice","productNamesSet","Set","leadTimeSet","weightGsmSet","quantitySet","priceSet","forEach","item","add","type","placeholder","onChange","e","setBuyerName","target","value","onClick","id","newSelectedFilterList","key","hidden","sort","map","index","b","Number","style","display","length","ProductsList","products","fetchedProducts","product_id","buyer_name","product_name","lead_time","weight_gsm","price_rs","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e623502a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pretva-logo.cd273745.png\";","import React from \"react\";\nimport \"./Navbar.css\";\n\nimport logo from \"../assets/pretva-logo.png\";\nfunction Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar__left\">\n        <img src={logo} alt=\"\" />\n      </div>\n\n      <ul className=\"navbar__middle\">\n        <li>About</li>\n        <li>Services</li>\n        <li className=\"selected\">Search</li>\n        <li>Feedback&nbsp;&amp;&nbsp;Support</li>\n      </ul>\n\n      <ul className=\"navbar__right\">\n        <li className=\"border\">My&nbsp;Account</li>\n        <li className=\"background\">Logout</li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","const axios = require('axios');\n\nexport default async function fetchProducts(filters) {\n    try {\n        //Converting into string\n        if (filters.buyerName) filters.buyerName = String(filters.buyerName);\n        if (filters.leadTime) filters.leadTime = String(filters.leadTime);\n        if (filters.price) filters.price = String(filters.price);\n        if (filters.productName) filters.productName = String(filters.productName);\n        if (filters.quantity) filters.quantity = String(filters.quantity);\n        if (filters.weightGsm) filters.weightGsm = String(filters.weightGsm);\n\n        //Fetching Result\n        const result = await axios.post('/products', {\n            \"product_name\": filters.productName,\n            \"lead_time\": filters.leadTime,\n            \"weight_gsm\": filters.weightGsm,\n            \"quantity\": filters.quantity,\n            \"price_rs\": filters.priceRs,\n            \"buyer_name\": filters.buyerName\n        });\n        return result;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n","import React, { useState } from \"react\";\nimport \"./Search.css\";\nimport fetchProducts from \"../apis/fetchProducts\";\n\nfunction Search(props) {\n  const [productNameList, setProductNameList] = useState([\"\"]);\n  const [leadTimeList, setLeadTimeList] = useState([\"\"]);\n  const [weightGsmList, setWeightGsmList] = useState([\"\"]);\n  const [quantityList, setQuantityList] = useState([\"\"]);\n  const [priceList, setPriceList] = useState([\"\"]);\n  const [selectedFiltersList, setSelectedFiltersList] = useState([]);\n\n  const handleBuyerNameChange = (e) => {\n    props.filters.setBuyerName(e.target.value);\n  };\n\n  const handleProductNameChange = (e) => {\n    props.filters.setProductName(e.target.value);\n    const newSelectedFilterList = selectedFiltersList;\n    newSelectedFilterList[0] = e.target.value;\n    setSelectedFiltersList(newSelectedFilterList);\n  };\n\n  const handleLeadTimeChange = (e) => {\n    props.filters.setLeadTime(e.target.value);\n    const newSelectedFilterList = selectedFiltersList;\n    newSelectedFilterList[1] = e.target.value;\n    setSelectedFiltersList(newSelectedFilterList);\n  };\n\n  const handleWeightGsmChange = (e) => {\n    props.filters.setWeightGsm(e.target.value);\n    const newSelectedFilterList = selectedFiltersList;\n    newSelectedFilterList[2] = e.target.value;\n    setSelectedFiltersList(newSelectedFilterList);\n  };\n\n  const handleQuantityChange = (e) => {\n    props.filters.setQuantity(e.target.value);\n    const newSelectedFilterList = selectedFiltersList;\n    newSelectedFilterList[3] = e.target.value;\n    setSelectedFiltersList(newSelectedFilterList);\n  };\n\n  const handlePriceChange = (e) => {\n    props.filters.setPrice(e.target.value);\n    const newSelectedFilterList = selectedFiltersList;\n    newSelectedFilterList[4] = e.target.value;\n    setSelectedFiltersList(newSelectedFilterList);\n  };\n\n  const handleFindBuyer = async () => {\n    const result = await fetchProducts({ buyerName: props.filters.buyerName });\n    updateLists(result);\n    props.setFetchedProducts(result.data);\n  };\n\n  const handleApplyFilter = async () => {\n    const result = await fetchProducts(props.filters);\n    updateLists(result);\n    props.setFetchedProducts(result.data);\n  };\n\n  const handleReset = async () => {\n    const result = await fetchProducts({ buyerName: props.filters.buyerName });\n    updateLists(result);\n    setSelectedFiltersList([]);\n    props.filters.setProductName(undefined);\n    props.filters.setLeadTime(undefined);\n    props.filters.setWeightGsm(undefined);\n    props.filters.setQuantity(undefined);\n    props.filters.setPrice(undefined);\n    props.setFetchedProducts(result.data);\n  };\n\n  const updateLists = (result) => {\n    let productNamesSet = new Set();\n    let leadTimeSet = new Set();\n    let weightGsmSet = new Set();\n    let quantitySet = new Set();\n    let priceSet = new Set();\n\n    result.data.forEach((item) => {\n      productNamesSet.add(item[\"product_name\"]);\n      leadTimeSet.add(item[\"lead_time\"]);\n      weightGsmSet.add(item[\"weight_gsm\"]);\n      quantitySet.add(item[\"quantity\"]);\n      priceSet.add(item[\"price_rs\"]);\n    });\n\n    setProductNameList(productNamesSet);\n    setLeadTimeList(leadTimeSet);\n    setWeightGsmList(weightGsmSet);\n    setQuantityList(quantitySet);\n    setPriceList(priceSet);\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"search__path\">\n        <p>\n          <span className=\"bold\">Search</span>&nbsp;/&nbsp;Search Buyer Requirements\n        </p>\n      </div>\n\n      <div className=\"search__filter\">\n        <div className=\"search__filter__button\">\n          <button className=\"capsule-left\">Search Supplier Products</button>\n          <button className=\"capsule-right selected\">Search Buyer Requirements</button>\n        </div>\n\n        <div className=\"search__filter__textbox\">\n          <input type=\"text\" placeholder=\"Enter Buyer Name\" onChange={handleBuyerNameChange} value={props.buyerName} />\n          <button className=\"capsule\" onClick={handleFindBuyer}>\n            Find Buyer\n          </button>\n        </div>\n\n        <div className=\"search__filter__dropdown\">\n          <p className=\"bold\">Search Filters</p>\n          <ul>\n            <li className=\"dropdown\">\n              <select id=\"productName\" className=\"dropbtn\" onChange={handleProductNameChange} value=\"Product\">\n                <option key={0} value=\"Product\" hidden>\n                  Product\n                </option>\n\n                {[...productNameList].sort().map((item, index) => {\n                  return (\n                    <option key={index + 1} value={item}>\n                      {item}\n                    </option>\n                  );\n                })}\n              </select>\n            </li>\n            <li className=\"dropdown\">\n              <select id=\"leadTime\" className=\"dropbtn\" onChange={handleLeadTimeChange} value=\"Lead Time\">\n                <option value={undefined} hidden>\n                  Lead&nbsp;Time\n                </option>\n                {[...leadTimeList]\n                  .sort((a, b) => Number(a) - Number(b))\n                  .map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n              </select>\n            </li>\n            <li className=\"dropdown\">\n              <select className=\"dropbtn\" onChange={handleWeightGsmChange} value=\"Weight GSM\">\n                <option value={undefined} hidden>\n                  Weight&nbsp;GSM\n                </option>\n                {[...weightGsmList]\n                  .sort((a, b) => Number(a) - Number(b))\n                  .map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n              </select>\n            </li>\n            <li className=\"dropdown\">\n              <select className=\"dropbtn\" onChange={handleQuantityChange} value=\"Quantity\">\n                <option value={undefined} hidden>\n                  Quatity\n                </option>\n                {[...quantityList]\n                  .sort((a, b) => Number(a) - Number(b))\n                  .map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n              </select>\n            </li>\n            <li className=\"dropdown\">\n              <select className=\"dropbtn\" onChange={handlePriceChange} value=\"Price\">\n                <option value={undefined} hidden>\n                  Price\n                </option>\n                {[...priceList]\n                  .sort((a, b) => Number(a) - Number(b))\n                  .map((item, index) => {\n                    return (\n                      <option key={index} value={item}>\n                        {item}\n                      </option>\n                    );\n                  })}\n              </select>\n            </li>\n\n            <button className=\"capsule\" onClick={handleApplyFilter}>\n              Apply Filters\n            </button>\n          </ul>\n        </div>\n\n        <div className=\"search__filter__selectedFilter\">\n          <hr />\n          <p>\n            Search Filters :\n            {[...selectedFiltersList].map((item, index) => {\n              if (item)\n                return (\n                  <span key={index} className=\"button capsule\">\n                    {item}\n                  </span>\n                );\n              else return \"\";\n            })}\n            <span style={{ display: selectedFiltersList.length > 0 ? \"\" : \"none\" }} className=\"button capsule clear\" onClick={handleReset}>\n              Clear All&nbsp;&#10006;\n            </span>\n          </p>\n          <hr />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./Products.css\";\nfunction ProductsList(props) {\n  const products = props.fetchedProducts;\n  if (products) {\n    return (\n      <div className=\"products\">\n        {[...products].map((item, index) => {\n          return (\n            <div key={index} className=\"products__item\">\n              <p className=\"product__item__property id\">\n                <span className=\"bold colored\">Product&nbsp;ID:</span>&nbsp; {item.product_id}\n              </p>\n              <p className=\"product__item__property buyerName\">\n                <span className=\"bold colored\">Buyer&nbsp;Name:</span>&nbsp; {item.buyer_name}\n              </p>\n              <p className=\"product__item__property productName\">\n                <span className=\"bold colored\">Product&nbsp;Name:</span>&nbsp; {item.product_name}\n              </p>\n              <p className=\"product__item__property leadTime\">\n                <span className=\"bold colored\">Lead&nbsp;Iime:</span>&nbsp; {item.lead_time}\n              </p>\n              <p className=\"product__item__property weightGsm\">\n                <span className=\"bold colored\">Weight&nbsp;GSM:</span>&nbsp; {item.weight_gsm}\n              </p>\n              <p className=\"product__item__property quantity\">\n                <span className=\"bold colored\">Quantity</span>&nbsp; {item.quantity}\n              </p>\n              <p className=\"product__item__property price\">\n                <span className=\"bold colored\">Price</span> {item.price_rs}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default ProductsList;\n","import React from \"react\";\nimport \"./Footer.css\";\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__quote\">\n        <p>Get in touch!</p>\n      </div>\n      <div className=\"footer__location\">\n        <p>Location</p>\n        <p>Bengaluru, Karnataka, India</p>\n      </div>\n      <div className=\"footer__contact\">\n        <p>Contact</p>\n        <p>support@pretva.com</p>\n      </div>\n      <div className=\"footer__follow\">\n        <p>Follow</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Navbar from './Navbar'\nimport Search from './Search'\nimport Products from './Products'\nimport Footer from './Footer'\nfunction App() {\n  const [productName, setProductName] = useState(undefined);\n  const [leadTime, setLeadTime] = useState(undefined);\n  const [weightGsm, setWeightGsm] = useState(undefined);\n  const [quantity, setQuantity] = useState(undefined);\n  const [price, setPrice] = useState(undefined);\n  const [buyerName, setBuyerName] = useState(undefined);\n  const [fetchedProducts, setFetchedProducts] = useState(undefined);\n\n\n  const filters = {\n    productName, setProductName, leadTime, setLeadTime, weightGsm, setWeightGsm, quantity, setQuantity, price, setPrice, buyerName, setBuyerName\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Search filters={filters} setFetchedProducts={setFetchedProducts} />\n      <Products fetchedProducts={fetchedProducts} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}